Define TABLE_SIZE as 10

Define Structure Book:
    book_id: integer
    title: string
    author: string
    is_lent: integer
    due_date: time_t
    next: pointer to Book

Define Structure Borrower:
    borrower_id: integer
    name: string
    borrowed_books: pointer to BorrowedBook
    next: pointer to Borrower

Define Structure BorrowedBook:
    book_id: integer
    next: pointer to BorrowedBook

Define Structure HashTable:
    books: array of pointers to Book of size TABLE_SIZE
    borrowers: array of pointers to Borrower of size TABLE_SIZE

Define hash function:
    Input: key (integer)
    Output: hash value (integer)
    Compute hash value by taking the modulo of key with TABLE_SIZE

Define Function create_book:
    Input: book_id (integer), title (string), author (string)
    Output: pointer to Book
    Allocate memory for a new Book
    Initialize book_id, title, author, is_lent, and due_date fields
    Set next pointer to NULL
    Return the pointer to the new Book

Define Function create_borrower:
    Input: borrower_id (integer), name (string)
    Output: pointer to Borrower
    Allocate memory for a new Borrower
    Initialize borrower_id and name fields
    Set borrowed_books pointer to NULL
    Set next pointer to NULL
    Return the pointer to the new Borrower

Define Function insert_book:
    Input: table (pointer to HashTable), book (pointer to Book)
    Output: void
    Compute hash index for the book_id
    Insert the book at the beginning of the linked list at the computed index in the books array

Define Function insert_borrower:
    Input: table (pointer to HashTable), borrower (pointer to Borrower)
    Output: void
    Compute hash index for the borrower_id
    Insert the borrower at the beginning of the linked list at the computed index in the borrowers array

Define Function find_book:
    Input: table (pointer to HashTable), book_id (integer)
    Output: pointer to Book or NULL
    Compute hash index for the book_id
    Traverse the linked list at the computed index in the books array
    Return the pointer to the book if found, otherwise return NULL

Define Function find_borrower:
    Input: table (pointer to HashTable), borrower_id (integer)
    Output: pointer to Borrower or NULL
    Compute hash index for the borrower_id
    Traverse the linked list at the computed index in the borrowers array
    Return the pointer to the borrower if found, otherwise return NULL

Define Function remove_book:
    Input: table (pointer to HashTable), book_id (integer)
    Output: void
    Compute hash index for the book_id
    Traverse the linked list at the computed index in the books array to find the book with matching book_id
    If found, remove the book from the linked list and free memory
    If not found, print an error message

Define Function remove_borrower:
    Input: table (pointer to HashTable), borrower_id (integer)
    Output: void
    Compute hash index for the borrower_id
    Traverse the linked list at the computed index in the borrowers array to find the borrower with matching borrower_id
    If found, remove the borrower from the linked list and free memory
    Also free memory for any borrowed books associated with the borrower
    If not found, do nothing

Define Function lend_book:
    Input: table (pointer to HashTable), borrower_id (integer)
    Output: void
    Print available books
    Prompt the user to enter the book_id to borrow
    Find the book and borrower using find_book and find_borrower functions
    If the book is available and borrower is valid, lend the book to the borrower
    Update book's status, due date, and borrower's borrowed books list
    Print success message or error message

Define Function return_book:
    Input: table (pointer to HashTable), book_id (integer), borrower_id (integer)
    Output: void
    Find the borrower using find_borrower function
    If borrower is found, find the borrowed book with matching book_id
    If found, remove the borrowed book and update book's status
    Print success message or error message

Define Function track_overdue_books:
    Input: table (pointer to HashTable)
    Output: void
    Get current time
    Traverse all books in the library
    If a book is lent and its due date is before the current time, print it as overdue
    If no overdue books found, print a message

Define Function print_borrowed_books:
    Input: borrowed_books (pointer to BorrowedBook)
    Output: void
    Print the IDs of borrowed books separated by commas
    If no borrowed books, print "None"

Define Function print_borrowers:
    Input: table (pointer to HashTable)
    Output: void
    Traverse all borrowers in the library
    Print borrower's ID, name, and borrowed book IDs using print_borrowed_books function

Define Function print_books:
    Input: table (pointer to HashTable)
    Output: void
    Traverse all books in the library
    Print book's ID, title, author, and status (available or lent)

Define Function menu:
    Input: table (pointer to HashTable)
    Output: void
    Display a menu with options to interact with the library
    Based on user's choice, perform corresponding actions like registering
